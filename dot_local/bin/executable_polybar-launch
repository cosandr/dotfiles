#!/usr/bin/env bash

## Add this to your wm startup file.

# Terminate already running bar instances
killall -q polybar

# Wait until the processes have been shut down
while pgrep -u $UID -x polybar >/dev/null; do sleep 1; done

# Find and set CPU package
# https://github.com/polybar/polybar/issues/2078
for i in /sys/class/hwmon/hwmon*/temp*_input; do
    name="$(<$(dirname $i)/name): $(cat ${i%_*}_label 2>/dev/null || echo $(basename ${i%_*}))"
    if [ "$name" = "k10temp: Tctl" ]; then
        export HWMON_PATH="$i"
        break
    elif [ "$name" = "coretemp: Package id 0" ]; then
        export HWMON_PATH="$i"
        break
    fi
done

# Find and set amdgpu hwmon
for i in /sys/class/hwmon/hwmon*/device/vendor; do
    # Found amdgpu
    if [[ $(<"$i") -eq "0x1002" ]] && [[ -f $(dirname "$i")/gpu_busy_percent ]]; then
        export HWMON_AMDGPU="$(dirname "$(dirname "$i")")"
        break
    fi
done

# Find and set brightness device
for i in /sys/class/backlight/*/brightness; do
    export BACKLIGHT_DEV="$(basename "$(dirname "$i")")"
    break
done

# Find and set default ethernet adapter
if ! PRIMARY_ETH=$(route | grep '^default' | awk '{print $NF}' | grep -m 1 '^e'); then
    PRIMARY_ETH=""
fi
export PRIMARY_ETH

# Find and set default wifi adapter
if ! PRIMARY_WLAN=$(route | grep '^default' | awk '{print $NF}' | grep -m 1 '^w'); then
    PRIMARY_WLAN=""
fi
export PRIMARY_WLAN

# Fetch DPI from xorg
if ! DPI=$(xrdb -query | grep -oP 'Xft\.dpi:\s+\K\d+'); then
    DPI=96
fi

# Required fonts
# noto-fonts-emoji
# ttf-nerd-fonts-symbols
# https://dropways.github.io/feathericons/

# Some presets
conf_dpi() {
    case $1 in
        192)
            export HEIGHT="60"
            export FONT_0="Noto Sans:size=22;2"
            export FONT_1="Noto Color Emoji:pixelsize=22:style=Regular:scale=10;4"
            export FONT_2="Symbols Nerd Font:size=30;6"
            export FONT_3="Feather:size=30;6"
            export FONT_4="siji:size=35;6"
            ;;
        144)
            export HEIGHT="45"
            export FONT_0="Noto Sans:size=16;3"
            export FONT_1="Noto Color Emoji:pixelsize=16:style=Regular:scale=7;3"
            export FONT_2="Symbols Nerd Font:size=22;4"
            export FONT_3="Feather:size=22;4"
            export FONT_4="siji:size=24;4"
            ;;
        *)
            export HEIGHT="30"
            export FONT_0="Noto Sans:size=11;2"
            export FONT_1="Noto Color Emoji:pixelsize=11:style=Regular:scale=5;2"
            export FONT_2="Symbols Nerd Font:size=15;3"
            export FONT_3="Feather:size=15;3"
            export FONT_4="siji:size=16;3"
            ;;
    esac
}

declare -A MONITOR_MAP
# Example, launch laptop bar on eDP-1
# MONITOR_MAP["eDP-1"]=laptop
declare -A DPI_MAP
# Example, use 96 DPI for eDP-1
# DPI_MAP["eDP-1"]='96'

mapfile -t present_monitors < <(xrandr --listactivemonitors | awk -F ' ' '{if (NR!=1) {print $(NF)}}')

# shellcheck source=/dev/null
# Load specific config if present
[[ -f ~/.config/override/polybar ]] && source ~/.config/override/polybar

# Loop indices so we know which monitor was first (primary, hopefully)
for i in "${!present_monitors[@]}"; do
    export MONITOR="${present_monitors[$i]}"
    # Check for per-monitor DPI
    if [[ -n ${DPI_MAP[$MONITOR]} ]]; then
        conf_dpi "${DPI_MAP[$MONITOR]}"
    else
        conf_dpi "$DPI"
    fi
    # Use override bar
    if [[ -n ${MONITOR_MAP[$MONITOR]} ]]; then
        polybar "${MONITOR_MAP[$MONITOR]}" &
    elif [[ $i -eq 0 ]]; then
        polybar main &
    else
        polybar secondary &
    fi
done
